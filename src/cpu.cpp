#include "cpu.hpp"
#include "gameboy.hpp"

static void nop(Gameboy&)
{

}

static void ld_bc_nn(Gameboy& gb, uint16_t value)
{
	gb.registers.bc() = value;
}

static void ld_bc_a(Gameboy& gb)
{
	gb.mmu.memMap[gb.registers.bc()] = gb.registers.a;
}

static void ld_b_n(Gameboy& gb, uint8_t value)
{
	gb.registers.b = value;
}

#define LD_RR(r1, r2) static void ld_##r1##_##r2(Gameboy& gb) { gb.registers.##r1 = gb.registers.##r2; }
LD_RR(a, b)
LD_RR(b, a)
LD_RR(c, a)
LD_RR(b, c)
LD_RR(c, b)
LD_RR(d, a)
LD_RR(a, d)
LD_RR(d, b)

#define LD_RN(r) static void ld_##r##_n(Gameboy& gb, uint8_t value) { gb.registers.##r = value; }
LD_RN(a)
LD_RN(b)
LD_RN(c)
LD_RN(d)
LD_RN(e)
LD_RN(h)
LD_RN(l)

#define INC_REG_FN_DECL(r) static void inc_##r(Gameboy& gb) { gb.registers.##r++; }
INC_REG_FN_DECL(a)
INC_REG_FN_DECL(b)
INC_REG_FN_DECL(c)
INC_REG_FN_DECL(d)
INC_REG_FN_DECL(e)
INC_REG_FN_DECL(h)
INC_REG_FN_DECL(l)

#define DEC_REG_FN_DECL(r) static void dec_##r(Gameboy& gb) { gb.registers.##r--; }
DEC_REG_FN_DECL(a)
DEC_REG_FN_DECL(b)
DEC_REG_FN_DECL(c)
DEC_REG_FN_DECL(d)
DEC_REG_FN_DECL(e)
DEC_REG_FN_DECL(h)
DEC_REG_FN_DECL(l)

#define INC_WIDE_REG_FN_DECL(r) static void inc_##r(Gameboy& gb) { gb.registers.##r()++; }
INC_WIDE_REG_FN_DECL(af)
INC_WIDE_REG_FN_DECL(bc)
INC_WIDE_REG_FN_DECL(de)
INC_WIDE_REG_FN_DECL(hl)

#define DEC_WIDE_REG_FN_DECL(r) static void dec_##r(Gameboy& gb) { gb.registers.##r()--; }
DEC_WIDE_REG_FN_DECL(af)
DEC_WIDE_REG_FN_DECL(bc)
DEC_WIDE_REG_FN_DECL(de)
DEC_WIDE_REG_FN_DECL(hl)

#define UNDEFINED_INSTRUCTION {255, 0, nop}

Instruction instructions[256] = {
	{0, 4, nop},
	{ 2, 6, ld_bc_nn },
	{ 0, 8, ld_bc_a },
	{ 0, 4, inc_bc },
	{ 0, 4, inc_b },
	{ 0, 4, dec_b },
	{ 1, 4, ld_b_n },
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
	UNDEFINED_INSTRUCTION,
};

const char* instructions_names[256] = {
	"NOP",
	"LD BC, 0x%04X",
	"LD (BC), A",
	"INC BC",
	"INC B",
	"DEC B",
	"LD B, 0x%02X",
	"UNDEFINED",
};
